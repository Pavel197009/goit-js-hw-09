{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["let formData = {                                                  // инициализация объекта для работы с LocalStorage\r\n    email: \"\",\r\n    message: \"\",\r\n    changeField(fieldName,value) {                                  // запись поля объекта по его названию\r\n       this[fieldName] = value                              \r\n    },\r\n    clearValues() {                                                 // очистка полей объекта\r\n        this.email = \"\";\r\n        this.message = \"\";\r\n    },\r\n    reloadData(evt1,evt2) {\r\n        let obj = {\r\n            email: \"\",\r\n            message: \"\",\r\n        }\r\n        obj = JSON.parse(localStorage.getItem(LOCAL_KEY)) || {};   // чтение данных с LocalStorage\r\n        evt1.value = obj.email || '';                              // запись данных в поля Input\r\n        evt2.value = obj.message || '';\r\n        this.email = obj.email;                                    // запись данных в поля объекта \r\n        this.message = obj.message;\r\n    }\r\n}\r\nfunction handleSubmit(event) {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const login = form.elements.email.value;\r\n    const message = form.elements.message.value;\r\n  \r\n    if (login.trim() === \"\" || message.trim() === \"\") {         // проверка обрезанных input-ов на пустое значение с возвратом алерта \r\n        return alert(\"Fill please all fields\");\r\n    }\r\n\r\n    console.log({email:login, message:message});                // выдача в консоли значений объекта\r\n    form.reset();                                               // очистка формы после submit\r\n    localStorage.removeItem(LOCAL_KEY);                         // удаление ключа локального хранилища\r\n    formData.clearValues();                                 // сброс значений объекта до первоначального\r\n}\r\n\r\nfunction handleInputData(event) {\r\n    formData.changeField(event.target.name,event.target.value);        // замена соответствующего поля объекта по таргету\r\n    localStorage.setItem(LOCAL_KEY, JSON.stringify(formData));    // запись объекта в локальное хранилище\r\n}\r\n  \r\nconst LOCAL_KEY = 'feedback-form-state';                          // инициализация ключа\r\n\r\nconst feedbackForm = document.querySelector(\".feedback-form\");    // инициализация объекта формы\r\n\r\nconst { email, message } = feedbackForm.elements;         // деструктуризируем элементы формы\r\nformData.reloadData(email,message);\r\n\r\nfeedbackForm.addEventListener(\"submit\", handleSubmit);            // добавление обработчика submit\r\nfeedbackForm.addEventListener('input', handleInputData);          // добавление обработчика input"],"names":["formData","fieldName","value","evt1","evt2","obj","LOCAL_KEY","handleSubmit","event","form","login","message","handleInputData","feedbackForm","email"],"mappings":"oDAAA,IAAIA,EAAW,CACX,MAAO,GACP,QAAS,GACT,YAAYC,EAAUC,EAAO,CAC1B,KAAKD,CAAS,EAAIC,CACpB,EACD,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,QAAU,EAClB,EACD,WAAWC,EAAKC,EAAM,CAClB,IAAIC,EAAM,CACN,MAAO,GACP,QAAS,EACZ,EACDA,EAAM,KAAK,MAAM,aAAa,QAAQC,CAAS,CAAC,GAAK,GACrDH,EAAK,MAAQE,EAAI,OAAS,GAC1BD,EAAK,MAAQC,EAAI,SAAW,GAC5B,KAAK,MAAQA,EAAI,MACjB,KAAK,QAAUA,EAAI,OACtB,CACL,EACA,SAASE,EAAaC,EAAO,CACzBA,EAAM,eAAc,EACpB,MAAMC,EAAOD,EAAM,cACbE,EAAQD,EAAK,SAAS,MAAM,MAC5BE,EAAUF,EAAK,SAAS,QAAQ,MAEtC,GAAIC,EAAM,SAAW,IAAMC,EAAQ,KAAM,IAAK,GAC1C,OAAO,MAAM,wBAAwB,EAGzC,QAAQ,IAAI,CAAC,MAAMD,EAAO,QAAQC,CAAO,CAAC,EAC1CF,EAAK,MAAK,EACV,aAAa,WAAWH,CAAS,EACjCN,EAAS,YAAW,CACxB,CAEA,SAASY,EAAgBJ,EAAO,CAC5BR,EAAS,YAAYQ,EAAM,OAAO,KAAKA,EAAM,OAAO,KAAK,EACzD,aAAa,QAAQF,EAAW,KAAK,UAAUN,CAAQ,CAAC,CAC5D,CAEA,MAAMM,EAAY,sBAEZO,EAAe,SAAS,cAAc,gBAAgB,EAEtD,CAAE,MAAAC,EAAO,QAAAH,GAAYE,EAAa,SACxCb,EAAS,WAAWc,EAAMH,CAAO,EAEjCE,EAAa,iBAAiB,SAAUN,CAAY,EACpDM,EAAa,iBAAiB,QAASD,CAAe"}